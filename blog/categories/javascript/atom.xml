<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: JavaScript | 粗茶ですが]]></title>
  <link href="http://0cha.github.io/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://0cha.github.io/"/>
  <updated>2013-08-21T15:26:52+09:00</updated>
  <id>http://0cha.github.io/</id>
  <author>
    <name><![CDATA[0cha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Logic Pro X: Scripterプラグインの使い方 その1]]></title>
    <link href="http://0cha.github.io/blog/2013/08/20/logic-pro-x-scriptor-1/"/>
    <updated>2013-08-20T16:11:00+09:00</updated>
    <id>http://0cha.github.io/blog/2013/08/20/logic-pro-x-scriptor-1</id>
    <content type="html"><![CDATA[<p><a href="https://www.apple.com/jp/logic-pro/">Logic Pro X</a>では待望のMIDI FXが追加され、今までアルペジエータ1つ使うのに<a href="http://project-dtm.blogspot.jp/2011/06/logic-9.html">多大な苦労</a>をしていたのが大幅に改善されました。</p>

<p>デフォルトではアルペジエータをはじめランダマイザ、
コードトリガなどポピュラーなFXが用意されており、
デフォルトのFXだけでも非常に手軽で便利な物が揃ってます。</p>

<p>その中でも取り分けて面白いのが「Scripter」で、
MIDIのイベントをJavaScriptで加工する事が出来るというMIDIでStutterやりたい人にしか需要がなさそうなFXですw</p>

<p>今回はさわりだけ説明したいと思いますが、JavaScriptを多少知っていないと辛い内容です。。。。そして知ってる人にはリファレンス読めば十分という何とも中途半端・・・。</p>

<!-- more -->


<h2>基本的な使い方</h2>

<p>「ソフトウェア音源」か「外部 MIDI」トラックを追加して、
追加したトラックのミキサーで「MIDI FX」=> 「Scripter」を選択すればそのトラックにScripterが追加されます。</p>

<p><img src="/images/logic/scripter_mixer.png" title="&lsquo;Scripterを設定&rsquo; &lsquo;Scripterを設定&rsquo;" ></p>

<p>Scripterのウィンドウが開くので、「Open Script in Editor」を選択すると以下のコードが記述されたエディタが表示されて、
``` javascript</p>

<pre><code>function HandleMIDI(event)
{
  event.trace();
  event.send();
}
</code></pre>

<p>```</p>

<p>上記の状態で、「Run Script」ボタンを押した後に、MIDIキーボードとかMIDIコン弄るとコンソールにばーっとMIDIイベントが出力されます。</p>

<p>また、ソフトウェア音源を設定するか、MIDI音源を接続している場合、押した鍵盤の音やMIDIコンから送られたCC等が音源に適用されます。</p>

<p><img src="/images/logic/scripter_default.png" width="628" height="628" title="&lsquo;Script Editor&rsquo; &lsquo;Script Editor&rsquo;" ></p>

<h2>何が起きているのか</h2>

<p>MIDI入力があった際に「HandleMIDI()」関数が自動的に呼ばれて、入力されたMIDIイベントのインスタンスが
引数である「event」変数に格納されます。</p>

<p>event変数に入るMIDIのイベント情報は、いろいろなオブジェクトのインスタンスになっており、
HandleMIDI()関数内でevent変数に格納されたインスタンスが持つメソッドなどを操作することにより様々な処理を施すことができます。</p>

<p>デフォルトのコードであれば以下の部分ですね。</p>

<pre>
  event.trace(); // trace()メソッドはeventに格納されているMIDI情報をコンソールに出力する
  event.send();  // send()メソッドはeventに格納されているMIDI情報を音源に出力する
</pre>


<p>インスタンスによって様々なメソッドが用意されており、
例えば、入力されたノート(鍵盤情報)の3度上のノートを出力するには以下の様なコードになります。
``` javascript</p>

<pre><code>function HandleMIDI(event)
{
  event.trace(); // MIDI情報をコンソールに出力
  if (event instanceof Note) { // eventの中身がNoteオブジェクトのインスタンスだったら
    event.pitch += 4;          // 3度上のピッチにする
                               // Cのノートだった場合の加算する値と加算後のノートの関係は以下となる
                               // += 1  C#
                               // += 2  D
                               // += 3  D#
                               // += 4  E
                               // += 5  F
                               // += 6  F#
                               // += 7  G
                               // += 8  G#
                               // += 9  A
                               // += 10 A#
                               // += 11 B
                               // += 12 C +1oct
  }
  event.send();  // MIDI情報を音源に送る
}
</code></pre>

<p>```</p>

<p>4行目のif文で「instanceof」演算子を使って、event変数に格納されたインスタンスが「Note」オブジェクトであるかどうか判定をし、
Noteオブジェクトであった場合event.pitchプロパティの値に+4します。
そして、20行目のevent.send();で音源にMIDI情報が送られ、3度上の音が鳴るわけですね。</p>

<h2>オブジェクトたち</h2>

<p>鍵盤を押したり離したりした時にコンソールを見てみると、</p>

<blockquote>
  <strong>[NoteOn channel:1 pitch:62 [D3] velocity: 88]</strong><br />
  <strong>[NoteOff channle: 1 pitch:62 [D3] velocity: 64]</strong>
</blockquote>


<p>この様なログが出力されていると思います。
このログは3行目のevent.trace();によって出力されているevent変数に入っているMIDI情報ですが、NoteOnとNoteOffの二つの情報であることがわかります。</p>

<p>Scripterで用意されている各種オブジェクトは、MIDIで使用されるイベント毎に用意されています。
これらについては後々紹介しようと思いますが、どんなオブジェクトがあるのかはScripterプラグインの<a href="https://help.apple.com/logicpro-effects/mac/10/#lgce0d0efc5a">ドキュメント</a>で知ることが出来ます。</p>

<p>NoteOnとNoteOffもそれぞれ同名のオブジェクトが存在し、NoteOnの情報の時はNoteOnオブジェクト、NoteOffの時はNoteOffオブジェクトが使用されます。</p>

<p>しかし、if文のinstanceof演算子では「Note」オブジェクトかどうかを判定していて、NoteOn/NoteOffオブジェクトかどうかの判定ではなさそうに見えます。</p>

<p>実はこれScripterプラグインのマニュアルには記載されいませんが(実装例でNoteオブジェクトが使われていますがNoteオブジェクトの事には触れられていません)、NoteオブジェクトはNoteOn/NoteOffオブジェクトのプロトタイプとなっているようです。</p>

<p>incetanceof演算子はプロトタイプチェーンも含めて判定してくれるので、NoteOnかNoteOffのどちらかが来てもNoteオブジェクトかどうかの判定をするだけで済むようになっているんですね。</p>

<p>ちなみに、Noteオブジェクトでの判定を行わない場合は以下の様なちょっとかっこ悪いコードになります。
``` javascript
function HandleMIDI(event) {
  event.trace();
  if((event instanceof NoteOn) || (event instanceof NoteOff)){</p>

<pre><code>event.pitch += 4;
</code></pre>

<p>  }
  event.send
}
```</p>

<h2>どうでしょう</h2>

<p>ひとまずScripterがどのような物かのさわりだけは解ってもらえたかなと思います。</p>

<p>プリセットのスクリプトだけでも非常に楽しそうな事が出来るのが解りますが、自由自在に操れたらとても楽しそうだと思いませんか？</p>

<p>正直Logic使っててかつJavaScript知ってるという、どこに居るんだそんな人向けのプラグインですがやってみると意外と何とかなる物ですよ。</p>

<p>私もプログラミング自体が苦手なので、この文章を書くだけで四苦八苦しましたが・・・(^^;)</p>

<p>では、また次回!</p>
]]></content>
  </entry>
  
</feed>
